lst1 = [1,2,3,4,5]
lst2 = [6,7,8,9,10]

ans = map((lambda a,b: a+b),lst1,lst2)
print(*ans)

# 1. sorted + lambda 함수를 사용하여 아래와 같이 정렬해서 출력해 주세요 (알파벳순서대로 출력)

arr=['A','C','B','F','BB','G','DD','E','B','AA']

# 출력결과: ['A', 'AA', 'B', 'B', 'BB', 'C', 'DD', 'E', 'F', 'G']
print("1번------------")

# 1. 정답을 아래에 적어 주세요. (1번 문제는 정답을 적어 놓았음)

print(*sorted(arr,key=lambda x: x))
# sorted(정렬 시킬 객체, key=정렬  기준이 될 함수 정의)
arr.sort(key=lambda x: x)
print(*arr)



# -----------------------------------------------------------------------------

# 2. 람다 함수(sorted + lambda)를 사용 하여 아래와 같이 정렬해서 출력해 주세요 (문자열길이 + 알파벳순서)

arr=['A','C','B','F','BB','G','DD','E','B','AA']

# 출력결과: ['A', 'B', 'B', 'C', 'E', 'F', 'G', 'AA', 'BB', 'DD']
print("2번------------")
# 2. 정답을 아래에 적어 주세요

print(*sorted(arr,key=lambda x: (len(x),x)))  # 다중조건

arr.sort(key=lambda x: (len(x), x))

print(*arr)



# -----------------------------------------------------------------------------

# 3. 람다 함수를 사용하여 아래와 같이 정렬해서 출력해 주세요 (문자열길이 + 알파벳순서)

arr=['A','C','B','F','BB','G','DD','E','B','AA']

# 출력결과: ['AA', 'BB', 'DD', 'A', 'B', 'B', 'C', 'E', 'F', 'G']
print("3번------------")
# 3. 정답을 아래에 적어 주세요

print(*sorted(arr, key=lambda x: (-len(x), x)))



# -----------------------------------------------------------------------------
# 4. 람다 함수를 사용하여 아래와 같이 정렬해서 출력해 주세요 (문자열길이 + 알파벳순서)

arr=['A','C','B','F','BB','G','DA','E','B','AA','DD','DB']

# 출력결과: ['G', 'F', 'E', 'C', 'B', 'B', 'A', 'DD', 'DA', 'BB', 'AA']
print("4번------------")
# 4. 정답을 아래에 적어 주세요

print(*sorted(arr, key=lambda x: (-len(x), x), reverse=True))

arr.sort(key=lambda x: (-len(x),x), reverse=True)
print(*arr)



# -----------------------------------------------------------------------------
# 5. 람다 함수를 사용하여 아래와 같이 정렬해서 출력해 주세요 (튜플의 첫번째 값(0번 인덱스) 기준으로 정렬)

arr=[(1,3),(0,3),(1,4),(1,5),(0,1),(2,4)]

# 출력결과: [(0, 3), (0, 1), (1, 3), (1, 4), (1, 5), (2, 4)]
print("5번------------")
# 5. 정답을 아래에 적어 주세요

print(*sorted(arr,key=lambda x: x[0]))
arr.sort(key=lambda x: x[0])
print(*arr)




# -----------------------------------------------------------------------------
# 6. 람다 함수를 사용하여 아래와 같이 정렬해서 출력해 주세요 ( 우선순위 1. 튜플의 첫번째 값 / 우선순위 2. 두번째 값)

arr=[(1,3),(0,3),(1,4),(1,5),(0,1),(2,4)]

# 출력결과: [(0, 1), (0, 3), (1, 3), (1, 4), (1, 5), (2, 4)]
print("6번------------")
# 6. 정답을 아래에 적어 주세요

print(*sorted(arr, key=lambda x: (x[0], x[1])))
arr.sort(key=lambda x: (x, x))

print(*arr)



# -----------------------------------------------------------------------------
# 7. 람다 함수를 사용하여 아래와 같이 정렬해서 출력해 주세요 ( 우선순위 1. 짝수우선 / 우선순위 2. 내림차순)

arr = [1,6,4,2,38,9,5,2,3,6,4,7,56,2]

# 출력결과: ['A', 'A', 'A', 'Y', 'Y', 'Y', 'Z', 'Z', 'B', 'T']
print("7번------------")
# 7. 정답을 아래에 적어 주세요

ans = sorted(arr, key=lambda x: (x % 2 != 0, -x))  # x % 2 == 1의 결과값은 boolean으로 짝수일때 0 값을 가지게 됨.
print(ans)

arr.sort(key=lambda x: (x % 2, -x))
print(arr)


# -----------------------------------------------------------------------------


# 8. 빈도수가 가장 많은 문자우선순위로 정렬하기
#    (단, 빈도수가 같다면 사전순으로 빠른 문자를 먼저 출력)

arr = ['A', 'B', 'Z', 'Z', 'A', 'Y', 'Y', 'Y', 'A', 'T']

# 출력결과: ['A', 'A', 'A', 'Y', 'Y', 'Y', 'Z', 'Z', 'B', 'T']

print("8번------------")
# 8. 정답을 아래에 적어 주세요

ans = sorted(arr, key=lambda x: (-arr.count(x), x))  # 시간복잡도 O(N^2logN) 효율적이지 않음
print(ans)

from collections import Counter  # 시간복잡도 O(NlogN)
count = Counter(arr)  # 딕셔너리 형태로 개수 나타남

ans = sorted(arr, key=lambda x:(-count[x], x))
print(ans)

# -----------------------------------------------------------------------------




